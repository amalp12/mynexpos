
// Save user stack value for later use, set up the kernel stack
// Store the value of register SP in the UPTR field of the process table entry of the current process.
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1]*16) + 13] = SP;

// Set the MODE FLAG in the process table to system call number of exec.
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1]*16) + 9] = 10;


// Initialize SP (kernel stack pointer) to (user area page number)*512 -1.
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 5*CORE + 1] * 16) + 11] * 512  - 1 ;


// call AQUIRE KERNEL LOCK
R1 = ACQUIRE_KERN_LOCK;
call ACCESS_CONTROL;

// Call the Exit Process function in process manager module to exit the current process



// Arguement is process id
R1 = EXIT_PROCESS; // exit function number
R2 = [SYSTEM_STATUS_TABLE + 5*CORE + 1]; 
call PROCESS_MANAGER; // Process Manager Module


// calling RELEASE KERNEL LOCK
R1 = RELEASE_LOCK;
R2 = KERN_LOCK;
call ACCESS_CONTROL;

call SCHEDULER; // call the scheduler to schedule the next process
