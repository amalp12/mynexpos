// In this stage, we will implement only Terminal Write function in this module.

// Function number and current PID are stored in registers R1 and R2. Give meaningful names to these arguments.
alias functionNum R1;
alias currentPID R2;

// Terminal write function has a function number 3. If the functionNum is 3, implement the following steps else return using return statement.

if (functionNum == 3) then
    // Aquire Terminal
    multipush(R1,R2,R3);
    // Store the function number 8 in register R1 and PID of the current process from the System Status table in register R2 (Can use currentPID, as it already contain current PID value).
    R1 = 8; 
    R2 = currentPID;// no use
    call RESOURCE_MANAGER; // MOD_0
    // Ignore the value present in R0 as Acquire Terminal does not have any return value.

    multipop(R1,R2,R3);
    // Print the word in register R3, using the print statement.
    print R3;

    // Release Terminal
    multipush(R1,R2,R3);
    // Store the function number 8 in register R1 and PID of the current process from the System Status table in register R2 (Can use currentPID, as it already contain current PID value).
    R1 = 9; 
    R2 = currentPID;// no use
    call RESOURCE_MANAGER; // MOD_0
    // Ignore the value present in R0 as Acquire Terminal does not have any return value.

    multipop(R1,R2,R3);
    return;
    
else
   return;

endif;